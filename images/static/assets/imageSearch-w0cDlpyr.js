var m=Object.defineProperty;var b=(l,e,t)=>e in l?m(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t;var r=(l,e,t)=>b(l,typeof e!="symbol"?e+"":e,t);import{L as w}from"./config-Cl7HKdRu.js";/* empty css              */import{S as I,t as x,m as y,F as p,I as P,P as C,a as u,U as F,C as d}from"./photoFilter-WowTT1ro.js";import{h as E}from"./utils-B3qE-N8V.js";class z{constructor(e){r(this,"state",{photos:[],isLoading:!1,isSearchDone:!1,error:null,selectedPhoto:null,currentPhotoIndex:null,pollingSearchTerm:"",clientId:null});r(this,"events");r(this,"pollingInterval",null);r(this,"shouldStopPolling",!1);this.events=e}getState(){return{...this.state}}updateState(e){const t={...this.state};this.state={...this.state,...e},e.photos!==void 0&&e.photos!==t.photos&&this.events.onPhotosUpdate(this.state.photos),e.isLoading!==void 0&&e.isLoading!==t.isLoading&&this.events.onLoadingChange(this.state.isLoading),e.error!==void 0&&this.events.onErrorChange(this.state.error),e.isSearchDone!==void 0&&e.isSearchDone!==t.isSearchDone&&this.events.onSearchDoneChange(this.state.isSearchDone)}async startSearch(e){console.log("Inside startSearch with term:",e),this.stopPolling(),this.updateState({isLoading:!0,error:null,isSearchDone:!1,photos:[],pollingSearchTerm:e.trim(),clientId:null}),await this.performSearch(e,{isInitialSearch:!0})}async performSearch(e,t){try{const s=await I.searchImages(e,{...t,clientId:this.state.clientId||void 0});t.isInitialSearch&&s.client_id&&this.updateState({clientId:s.client_id});const i=x(s),o=y(this.state.photos,i);for(let n=1;n<o.length;n++)if(o[n].score!==void 0&&o[n-1].score!==void 0&&o[n].score>o[n-1].score){console.warn(`Photos not in decreasing score order at index ${n}: ${o[n-1].score} -> ${o[n].score}`);break}this.updateState({photos:o,isSearchDone:s.query_completed,isLoading:!1}),s.query_completed?(this.updateState({isLoading:!1}),this.stopPolling()):t.isInitialSearch&&this.startPolling()}catch(s){const i=s instanceof Error?s.message:"An unknown error occurred";this.updateState({error:i,isLoading:!1,isSearchDone:!0}),this.stopPolling(),console.error("Search error:",s)}}async startPolling(){for(console.log("Starting polling for search term:",this.state.pollingSearchTerm),this.shouldStopPolling=!1;!this.shouldStopPolling&&this.state.pollingSearchTerm&&!this.state.isSearchDone;)await this.performSearch(this.state.pollingSearchTerm,{isInitialSearch:!1})}stopPolling(){this.shouldStopPolling=!0,console.log("Polling stopped.")}selectPhoto(e){const t=this.state.photos.findIndex(s=>s.id===e.id);t!==-1&&this.updateState({selectedPhoto:e,currentPhotoIndex:t})}clearSelection(){this.updateState({selectedPhoto:null,currentPhotoIndex:null})}nextPhoto(){const{currentPhotoIndex:e,photos:t}=this.state;if(e!==null&&e<t.length-1){const s=e+1;this.updateState({currentPhotoIndex:s,selectedPhoto:t[s]})}}previousPhoto(){const{currentPhotoIndex:e,photos:t}=this.state;if(e!==null&&e>0){const s=e-1;this.updateState({currentPhotoIndex:s,selectedPhoto:t[s]})}}canGoNext(){const{currentPhotoIndex:e,photos:t}=this.state;return e!==null&&e<t.length-1}canGoPrevious(){const{currentPhotoIndex:e}=this.state;return e!==null&&e>0}destroy(){this.stopPolling()}}class k{constructor(e,t){r(this,"container");r(this,"fuzzySearchService");r(this,"callbacks");r(this,"searchContainer");r(this,"filtersContainer");r(this,"inputContainer");r(this,"searchInput");r(this,"searchButton");r(this,"dropdown");r(this,"selectedFilters",{query:[]});r(this,"suggestions",[]);r(this,"showDropdown",!1);r(this,"selectedIndex",-1);this.container=e,this.callbacks=t,this.fuzzySearchService=new p,this.hasCleanSlateCallback()||(console.warn("FuzzySearchUI: No clean slate callbacks provided. Images may not be cleared when all filters are removed."),console.warn("Please implement onCleanSlate or onClearImages in your callbacks.")),this.initializeFilters(),this.createUI(),this.setupEventListeners(),setTimeout(()=>{this.searchInput.focus()},0)}initializeFilters(){this.fuzzySearchService.getAvailableAttributes().forEach(t=>{this.selectedFilters[t]=[]})}createUI(){this.container.innerHTML=E`
      <div class="w-full max-w-4xl mx-auto p-2 fuzzy-search-container">
        <div class="w-full relative">
          <!-- Active Filters Display -->
          <div
            id="filters-container"
            class="flex w-full items-center mb-2 flex-wrap gap-1.5 min-h-[1.5rem]"
          >
            <!-- Filters will be rendered here -->
          </div>

          <!-- Compact Search Container -->
          <div class="flex flex-col space-y-2">
            <!-- Main Search Row -->
            <div class="flex space-x-2">
              <div id="input-container" class="relative flex-grow">
                <!-- Compact Input Container -->
                <div
                  class="relative border border-gray-300 rounded-lg focus-within:border-blue-500 focus-within:ring-1 focus-within:ring-blue-200 transition-all duration-200 bg-white flex items-center h-9 shadow-sm hover:shadow-md group"
                >                  <!-- Simplified Input Field -->                  <input
                    id="fuzzy-search-input"
                    type="text"
                    autocomplete="off"
                    placeholder="Search by people, folders, or keywords..."
                    class="flex-1 h-full px-3 text-sm bg-transparent border-0 focus:outline-none focus:ring-0 placeholder-gray-400"
                  />
                  <!-- Compact Clear Button -->
                  <button
                    id="clear-input-btn"
                    class="items-center justify-center w-7 h-7 text-gray-400 hover:text-red-500 hover:bg-red-50 rounded-full mr-1 transition-all duration-200 hidden"
                  >
                    <svg
                      class="w-3.5 h-3.5"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M6 18L18 6M6 6l12 12"
                      ></path>
                    </svg>
                  </button>
                </div>

                <!-- Compact Smart Dropdown -->
                <div
                  id="fuzzy-dropdown"
                  class="absolute top-full left-0 right-0 bg-white border border-gray-200 rounded-lg shadow-xl mt-1 z-50 max-h-64 overflow-y-auto hidden"
                  style="box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);"
                >
                  <div id="dropdown-content">
                    <!-- Dropdown content will be rendered here -->
                  </div>
                </div>
              </div>
              <!-- Compact Search Button -->
              <button
                id="fuzzy-search-btn"
                class="h-9 px-4 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 disabled:from-blue-400 disabled:to-blue-400 text-white font-medium rounded-lg transition-all duration-200 shadow-md hover:shadow-lg flex items-center space-x-1.5 text-sm"
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                  ></path>
                </svg>
                <span id="search-btn-text">Search</span>              </button>
            </div>
          </div>

        </div>
      </div>
    `,this.searchContainer=this.container.querySelector(".fuzzy-search-container"),this.filtersContainer=this.container.querySelector("#filters-container"),this.inputContainer=this.container.querySelector("#input-container"),this.searchInput=this.container.querySelector("#fuzzy-search-input"),this.searchButton=this.container.querySelector("#fuzzy-search-btn"),this.dropdown=this.container.querySelector("#fuzzy-dropdown")}setupEventListeners(){this.searchInput.addEventListener("input",this.handleInputChange.bind(this)),this.searchInput.addEventListener("keydown",this.handleKeyDown.bind(this)),this.searchInput.addEventListener("focus",this.handleInputFocus.bind(this)),this.searchInput.addEventListener("blur",this.handleInputBlur.bind(this)),this.searchButton.addEventListener("click",this.handleSearchClick.bind(this)),this.container.querySelector("#clear-input-btn").addEventListener("click",this.clearInput.bind(this)),document.addEventListener("click",t=>{this.inputContainer.contains(t.target)||this.hideDropdown()})}async handleInputChange(e){const s=e.target.value;console.log("Input changed to:",s),this.selectedIndex=-1,this.updateClearButton(),s.trim()?(this.suggestions=await this.fuzzySearchService.generateAllAttributeSuggestions(s),this.suggestions.length>0?(this.showDropdown=!0,this.renderDropdown()):this.hideDropdown()):(this.suggestions=[],this.hideDropdown())}handleKeyDown(e){if(this.showDropdown&&this.suggestions.length>0)if(e.key==="ArrowDown")e.preventDefault(),this.selectedIndex=this.selectedIndex<this.suggestions.length-1?this.selectedIndex+1:0,this.updateDropdownSelection();else if(e.key==="ArrowUp")e.preventDefault(),this.selectedIndex=this.selectedIndex>0?this.selectedIndex-1:this.suggestions.length-1,this.updateDropdownSelection();else if(e.key==="Enter")if(e.preventDefault(),this.selectedIndex>=0&&this.selectedIndex<this.suggestions.length){const t=this.suggestions[this.selectedIndex];this.handleSuggestionClick(t)}else e.shiftKey?this.handleSearchClick():this.handleAddFilter();else e.key==="Escape"&&(this.selectedIndex=-1,this.hideDropdown(),this.suggestions=[]);else e.key==="Enter"&&(e.preventDefault(),e.shiftKey?this.handleSearchClick():this.handleAddFilter())}handleInputFocus(){this.selectedIndex=-1,this.searchInput.value.trim()&&this.fuzzySearchService.generateAllAttributeSuggestions(this.searchInput.value).then(e=>{this.suggestions=e,this.suggestions.length>0?(this.showDropdown=!0,this.renderDropdown()):this.hideDropdown()})}handleInputBlur(){setTimeout(()=>{this.suggestions=[],this.selectedIndex=-1,this.hideDropdown()},200)}async handleAddFilter(){var e;if(this.searchInput.value.trim()){const t=this.searchInput.value.trim();(e=this.selectedFilters.query)!=null&&e.includes(t)||this.addFilter("query",t),this.searchInput.value="",this.suggestions=[],this.hideDropdown(),this.updateClearButton(),this.executeSearch()}}async handleSuggestionClick(e){console.log("Suggestion clicked:",e),this.addFilter(e.attribute,e.text),this.searchInput.value="",this.suggestions=[],this.hideDropdown(),this.updateClearButton(),this.executeSearch()}async handleSearchClick(){this.searchInput.value.trim()&&await this.handleAddFilter(),this.executeSearch()}addFilter(e,t){this.selectedFilters[e]||(this.selectedFilters[e]=[]),this.selectedFilters[e].includes(t)||(e==="query"?this.selectedFilters[e]=[t]:this.selectedFilters[e].push(t),this.renderFilters(),this.callbacks.onFilterAdded(e,t))}removeFilter(e,t){if(this.selectedFilters[e]){this.selectedFilters[e]=this.selectedFilters[e].filter(o=>o!==t),this.renderFilters(),this.callbacks.onFilterRemoved(e,t);const s=Object.keys(this.selectedFilters).some(o=>this.selectedFilters[o]&&this.selectedFilters[o].length>0),i=this.searchInput.value.trim().length>0;console.log(`Filter removed: ${e}=${t}`),console.log(`hasAnyFilters: ${s}, hasSearchInput: ${i}`),console.log("Current filters:",this.selectedFilters),s||i?(console.log("Triggering fresh search with remaining filters/input"),this.executeSearch()):(console.log("No filters or input remaining, returning to clean slate"),this.executeSearchForCleanSlate())}}clearInput(){this.searchInput.value="",this.suggestions=[],this.hideDropdown(),this.updateClearButton(),this.searchInput.focus()}executeSearch(){const e=this.fuzzySearchService.buildQueryString(this.selectedFilters);console.log("Executing search with query:",e),this.callbacks.onSearchExecuted(e,this.selectedFilters)}executeSearchForCleanSlate(){console.log("Clean slate detected - clearing images without search"),this.callbacks.onCleanSlate?(console.log("Using onCleanSlate callback"),this.callbacks.onCleanSlate()):this.callbacks.onClearImages?(console.log("Using onClearImages callback"),this.callbacks.onClearImages()):(console.warn("No clean slate callback provided. Images may not be cleared. Please implement onCleanSlate or onClearImages callback."),console.warn("To fix this, add onCleanSlate: () => setImages([]) to your callbacks"))}renderFilters(){const e=Object.keys(this.selectedFilters).filter(s=>this.selectedFilters[s].length>0).map(s=>this.selectedFilters[s].map(i=>{const o=this.fuzzySearchService.getAttributeIcon(s);return`
            <div class="flex items-center px-2 py-1 rounded-md border ${this.fuzzySearchService.getAttributeColor(s)} hover:shadow-md transition-all duration-200 cursor-pointer group filter-tag" data-attribute="${s}" data-value="${i}">
              <span class="mr-1 text-sm">${o}</span>
              <span class="text-xs font-medium">${i}</span>
              <button class="ml-1.5 text-current opacity-60 hover:opacity-100 hover:bg-white hover:bg-opacity-30 rounded-full p-0.5 transition-all duration-200 remove-filter-btn" data-attribute="${s}" data-value="${i}">
                <svg class="w-2.5 h-2.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
              </button>
            </div>
          `}).join("")).flat().join("");this.filtersContainer.innerHTML=e,this.filtersContainer.querySelectorAll(".remove-filter-btn").forEach(s=>{s.addEventListener("click",i=>{i.stopPropagation();const o=s.getAttribute("data-attribute"),n=s.getAttribute("data-value");this.removeFilter(o,n)})})}renderDropdown(){if(!this.showDropdown){this.hideDropdown();return}const e=this.dropdown.querySelector("#dropdown-content");if(this.suggestions.length>0){const t=this.suggestions.reduce((n,a)=>(n[a.attribute]||(n[a.attribute]=[]),n[a.attribute].push(a),n),{});let s="",i=0;Object.keys(t).forEach(n=>{const a=t[n],h=this.fuzzySearchService.getAttributeIcon(n),S=this.fuzzySearchService.getAttributeDisplayName(n);Object.keys(t).length>1&&(s+=`
            <div class="px-3 py-2 text-xs font-semibold text-gray-500 bg-gray-50 border-b border-gray-100 flex items-center">
              <span class="mr-2">${h}</span>
              ${S}
            </div>
          `),a.forEach(c=>{const v=this.fuzzySearchService.getAttributeColor(c.attribute);s+=`
            <div class="suggestion-option flex items-center px-3 py-2.5 cursor-pointer border-b border-gray-100 last:border-b-0 group hover:bg-blue-50 transition-all duration-200 ${this.selectedIndex===i?"bg-blue-50 border-l-2 border-l-blue-500":""}" data-index="${i}">
              <div class="flex items-center justify-center w-7 h-7 rounded-lg mr-3 ${v} shadow-sm group-hover:shadow-md transition-shadow duration-200">
                <span class="text-sm">${h}</span>
              </div>
              <div class="flex-grow">
                <div class="font-medium text-gray-900 group-hover:text-blue-700 transition-colors duration-200 text-sm">${c.text}</div>
                <div class="text-xs text-gray-500 flex items-center mt-0.5">
                  <span class="capitalize">
                    Add to ${c.attribute.replace("_"," ")} search
                  </span>
                </div>
              </div>
              <div class="flex items-center justify-center w-6 h-6 rounded-full bg-blue-100 text-blue-600 group-hover:bg-blue-500 group-hover:text-white transition-all duration-200">
                <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
              </div>
            </div>
          `,i++})}),e.innerHTML=s,e.querySelectorAll(".suggestion-option").forEach((n,a)=>{n.addEventListener("click",h=>{h.preventDefault(),h.stopPropagation(),console.log("Suggestion div clicked:",this.suggestions[a]),this.handleSuggestionClick(this.suggestions[a])}),n.addEventListener("mousedown",h=>{h.preventDefault()}),n.addEventListener("mouseenter",()=>{this.selectedIndex=a,this.updateDropdownSelection()})})}else{this.hideDropdown();return}this.dropdown.classList.remove("hidden")}updateDropdownSelection(){this.dropdown.querySelectorAll(".suggestion-option").forEach((t,s)=>{s===this.selectedIndex?t.classList.add("bg-blue-50","border-l-2","border-l-blue-500"):t.classList.remove("bg-blue-50","border-l-2","border-l-blue-500")})}hideDropdown(){this.showDropdown=!1,this.dropdown.classList.add("hidden")}updateAttributeIndicator(){}updateClearButton(){const e=this.container.querySelector("#clear-input-btn");this.searchInput.value?(e.classList.remove("hidden"),e.classList.add("flex")):(e.classList.add("hidden"),e.classList.remove("flex"))}cleanup(){this.fuzzySearchService.cleanup()}getSearchQuery(){return this.searchInput.value.trim()}getCurrentFilters(){return{...this.selectedFilters}}clearAllFilters(){this.selectedFilters={},this.fuzzySearchService.getAvailableAttributes().forEach(e=>{this.selectedFilters[e]=[]}),this.renderFilters(),this.executeSearchForCleanSlate()}hasCleanSlateCallback(){return!!(this.callbacks.onCleanSlate||this.callbacks.onClearImages)}getDebugInfo(){var e,t,s;return{isCleanSlate:this.isCleanSlate(),hasCleanSlateCallback:this.hasCleanSlateCallback(),hasFilters:Object.keys(this.selectedFilters).some(i=>this.selectedFilters[i]&&this.selectedFilters[i].length>0),hasSearchInput:((t=(e=this.searchInput)==null?void 0:e.value)==null?void 0:t.trim().length)>0,searchInputValue:((s=this.searchInput)==null?void 0:s.value)||"",filters:{...this.selectedFilters},suggestionsCount:this.suggestions.length,dropdownVisible:this.showDropdown,callbacksAvailable:{onCleanSlate:!!this.callbacks.onCleanSlate,onClearImages:!!this.callbacks.onClearImages,onSearchExecuted:!!this.callbacks.onSearchExecuted}}}forceCleanSlate(){console.log("Force clearing to clean slate"),this.searchInput.value="",this.updateClearButton(),this.suggestions=[],this.hideDropdown(),this.selectedFilters={},this.fuzzySearchService.getAvailableAttributes().forEach(e=>{this.selectedFilters[e]=[]}),this.renderFilters(),this.executeSearchForCleanSlate()}initializeCleanSlate(){this.clearAllFilters(),this.clearInput(),this.isCleanSlate()&&!this.searchInput.value.trim()&&this.executeSearchForCleanSlate()}triggerCleanSlate(){this.executeSearchForCleanSlate()}isCleanSlate(){var s,i;const e=Object.keys(this.selectedFilters).some(o=>this.selectedFilters[o]&&this.selectedFilters[o].length>0),t=((i=(s=this.searchInput)==null?void 0:s.value)==null?void 0:i.trim().length)>0;return!e&&!t}addFilterExternal(e,t){this.addFilter(e,t)}executeSearchExternal(){this.executeSearch()}}class f{constructor(){r(this,"searchService");r(this,"uiService");r(this,"fuzzySearchService");r(this,"fuzzySearchUI");r(this,"photoFilter");r(this,"allPhotos",[]);r(this,"filteredPhotos",[]);r(this,"displayedPhotos",[]);r(this,"currentModal",null);r(this,"PAGE_SIZE",100);r(this,"currentPage",1);r(this,"totalPages",0);P.initialize(),C.initialize("photo-grid-container",{loadingId:"loading-indicator",errorId:"error-display",noResultsId:"no-results-message",gridId:"photo-grid"}),this.photoFilter=new u({onFilterChange:s=>this.handleFilteredPhotosUpdate(s)});const e=document.getElementById("photo-filter-container");e&&(e.classList.remove("lg:block"),e.classList.add("hidden"),e.innerHTML=u.getTemplate("photo-filter"),this.photoFilter.initialize("photo-filter")),this.fuzzySearchService=new p;const t=document.getElementById("fuzzy-search-container");if(!t)throw new Error("Fuzzy search container not found");this.fuzzySearchUI=new k(t,{onSearchExecuted:(s,i)=>this.handleSearch(s),onFilterAdded:(s,i)=>this.handleFilterAdded(s,i),onFilterRemoved:(s,i)=>this.handleFilterRemoved(s,i)}),this.uiService=new F("photo-grid-container"),this.searchService=new z({onPhotosUpdate:s=>this.handlePhotosUpdate(s),onLoadingChange:s=>this.handleLoadingChange(s),onErrorChange:s=>this.handleErrorChange(s),onSearchDoneChange:s=>this.handleSearchDoneChange(s)}),this.setupEventListeners(),this.init()}init(){console.log("ImageSearch app initialized"),this.processUrlParameters()}processUrlParameters(){const e=new URLSearchParams(window.location.search),t=["query","person","resource_directory","camera_make","camera_model","location"];let s=!1;t.forEach(i=>{const o=e.get(i);if(o){console.log(`Found URL parameter: ${i}=${o}`);let n=decodeURIComponent(o);i==="resource_directory"&&(n=n.replace(/\//g,"\\")),this.fuzzySearchUI.addFilterExternal(i,n),s=!0}}),s&&(console.log("Executing search based on URL parameters"),this.fuzzySearchUI.executeSearchExternal())}handleFilterAdded(e,t){console.log("Filter added:",e,t)}handleFilterRemoved(e,t){console.log("Filter removed:",e,t)}setupEventListeners(){console.log("Setting up event listeners for ImageSearchApp"),this.uiService.setupEventListeners({onPhotoClick:e=>this.handlePhotoClick(e),onModalClose:()=>this.handleModalClose(),onModalNext:()=>this.handleModalNext(),onModalPrevious:()=>this.handleModalPrevious()}),this.setupGlobalSearchListener(),this.setupMobileFilterToggle()}setupMobileFilterToggle(){const e=document.getElementById("mobile-filter-toggle"),t=document.getElementById("photo-filter-container");e&&t&&e.addEventListener("click",()=>{t.classList.toggle("hidden");const s=e.querySelector("svg:last-child");s&&s.classList.toggle("rotate-180")})}setupGlobalSearchListener(){console.log("Setting up global search listener"),document.addEventListener("imageSearch",e=>{const{query:t}=e.detail;t&&this.handleSearch(t)})}async handleSearch(e){if(console.log("Function handleSearch called with query:",e),!e.trim()){this.uiService.updateError("Please enter a search term");return}if(e.length<d.MIN_SEARCH_LENGTH){this.uiService.updateError(`Search term must be at least ${d.MIN_SEARCH_LENGTH} character(s) long`);return}console.log("Starting search for:",e);try{await this.searchService.startSearch(e)}catch(t){console.error("Search failed:",t),this.uiService.updateError(t instanceof Error?t.message:d.ERROR_MESSAGES.UNKNOWN_ERROR)}}handlePhotosUpdate(e){console.log("Photos updated:",e.length),this.allPhotos=e,this.filteredPhotos=[...e],this.photoFilter.updatePhotos(e);const t=document.getElementById("photo-filter-container");t&&(e.length>0?(t.classList.remove("hidden"),t.classList.add("lg:block")):(t.classList.remove("lg:block"),t.classList.add("hidden"))),this.updatePagination(),this.renderDisplayedPhotos(),this.setupPaginationEventListeners();const s=this.searchService.getState();e.length===0&&s.isSearchDone&&!s.isLoading&&!s.error?this.uiService.showNoResults(!0):this.uiService.showNoResults(!1)}handleFilteredPhotosUpdate(e){console.log("Filtered photos updated:",e.length),this.filteredPhotos=e,this.currentPage=1,this.updatePagination(),this.renderDisplayedPhotos(),this.setupPaginationEventListeners(),this.currentModal=null}updatePagination(){this.totalPages=Math.ceil(this.filteredPhotos.length/this.PAGE_SIZE);const e=(this.currentPage-1)*this.PAGE_SIZE,t=Math.min(e+this.PAGE_SIZE,this.filteredPhotos.length);this.displayedPhotos=this.filteredPhotos.slice(e,t),this.updatePaginationUI()}updatePaginationUI(){const e=document.getElementById("pagination-info");if(e){const n=(this.currentPage-1)*this.PAGE_SIZE+1,a=Math.min(this.currentPage*this.PAGE_SIZE,this.filteredPhotos.length);e.textContent=`Showing ${n}-${a} of ${this.filteredPhotos.length} photos`}const t=document.getElementById("prev-page-btn"),s=document.getElementById("next-page-btn"),i=document.getElementById("page-info");t&&(t.disabled=this.currentPage<=1),s&&(s.disabled=this.currentPage>=this.totalPages),i&&(i.textContent=`Page ${this.currentPage} of ${this.totalPages}`);const o=document.getElementById("pagination-container");o&&(this.totalPages>1?o.classList.remove("hidden"):o.classList.add("hidden"))}goToPage(e){e<1||e>this.totalPages||(this.currentPage=e,this.updatePagination(),this.renderDisplayedPhotos(),window.scrollTo(0,0))}scrollToFilterLevel(){const e=document.getElementById("photo-filter-container"),t=document.getElementById("results-section"),s=e!=null&&e.classList.contains("lg:block")?e:t;s&&requestAnimationFrame(()=>{const i=s.getBoundingClientRect(),o=window.pageYOffset+i.top-20;window.scrollTo({top:o,behavior:"instant"})})}setupPaginationEventListeners(){var s,i;const e=document.getElementById("prev-page-btn"),t=document.getElementById("next-page-btn");if(e){const o=e.cloneNode(!0);(s=e.parentNode)==null||s.replaceChild(o,e),o.addEventListener("click",n=>{n.preventDefault(),n.stopPropagation(),o.disabled||this.goToPage(this.currentPage-1)})}if(t){const o=t.cloneNode(!0);(i=t.parentNode)==null||i.replaceChild(o,t),o.addEventListener("click",n=>{n.preventDefault(),n.stopPropagation(),o.disabled||this.goToPage(this.currentPage+1)})}}renderDisplayedPhotos(){this.uiService.updatePhotos(this.displayedPhotos,e=>this.handlePhotoClick(e))}handleLoadingChange(e){console.log("Loading state changed:",e),this.uiService.updateLoading(e)}handleErrorChange(e){console.log("Error state changed:",e),this.uiService.updateError(e)}handleSearchDoneChange(e){console.log("Search done state changed:",e);const t=this.searchService.getState();t.photos.length===0&&e&&!t.isLoading&&!t.error&&this.uiService.showNoResults(!0)}handlePhotoClick(e){console.log("Photo clicked:",e.id);const t=this.filteredPhotos.findIndex(o=>o.id===e.id);if(t===-1)return;this.searchService.selectPhoto(e);const s=t>0,i=t<this.filteredPhotos.length-1;this.uiService.showModal(e,s,i)}handleModalClose(){console.log("Modal closed"),this.searchService.clearSelection(),this.uiService.hideModal()}handleModalNext(){const e=this.searchService.getState();if(!e.selectedPhoto)return;const t=this.filteredPhotos.findIndex(s=>s.id===e.selectedPhoto.id);if(t!==-1&&t<this.filteredPhotos.length-1){console.log("Modal next");const s=this.filteredPhotos[t+1];this.searchService.selectPhoto(s);const i=t+1>0,o=t+1<this.filteredPhotos.length-1;this.uiService.showModal(s,i,o)}}handleModalPrevious(){const e=this.searchService.getState();if(!e.selectedPhoto)return;const t=this.filteredPhotos.findIndex(s=>s.id===e.selectedPhoto.id);if(t!==-1&&t>0){console.log("Modal previous");const s=this.filteredPhotos[t-1];this.searchService.selectPhoto(s);const i=t-1>0,o=t-1<this.filteredPhotos.length-1;this.uiService.showModal(s,i,o)}}search(e){this.handleSearch(e)}getState(){return this.searchService.getState()}destroy(){this.searchService.destroy(),this.fuzzySearchUI.cleanup()}}document.addEventListener("DOMContentLoaded",()=>{console.log("DOM loaded, initializing ImageSearch app"),window.imageSearchApp=new f});window.addEventListener("beforeunload",()=>{window.imageSearchApp&&window.imageSearchApp.destroy()});new w({title:"Image Search - Hachi",currentPage:"/image-search.html",showNavbar:!0});function g(){try{new f}catch(l){console.error("Failed to initialize image search:",l)}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",g):g();console.log("Image search page initialized");
